{"version":3,"sources":["PhraseDatabase.js","App.js","serviceWorker.js","index.js"],"names":["defaultConfig","database","response","style","exampleWildcards","value","column","item","user","doc","description","name","App","margin","backgroundColor","botConfig","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90b89423.chunk.js","sourcesContent":["//Just a default configuration file\nlet db = {\n    \"data\": [\n        {\n            \"phrase\": [\"What did I say\", \"What do you think I said\", \"What was I talking about?\"],\n            \"phraseType\": \"whatsaid\",\n            \"implies\": [\"whatsaid\"],\n            \"target\": [\"whatsaid\"],\n            \"meta\": {\n                \"group\": \"whatsaid\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"privacy\"\n            ],\n            \"phraseType\": \"privacy\",\n            \"implies\": [\n                \"privacy\"\n            ],\n            \"target\": [\n                \"privacy\"\n            ],\n            \"meta\": {\n                \"group\": \"privacy\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Who is your maker?\",\n            ],\n            response : [\"John Loverich\"],\n            \"phraseType\": \"ask switch bot\",\n            \"implies\": [\n                \"whoMadeYou\"\n            ],\n            \"target\": [\n                \"name\"\n            ],\n            \"meta\": {\n                style : [\"nosearch\"],\n                \"group\": \"ask switch bot\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"yes\"\n            ],\n            \"phraseType\": \"afirm\",\n            \"implies\": [\n                \"yes\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"group\": \"affirmation\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"continue\",\n                \"more\",\n                \"next\"\n            ],\n            \"phraseType\": \"continue\",\n            \"implies\": [\n                \"continue\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"group\": \"noGroup\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"You are smart\",\n                \"You look nice\",\n                \"you are good\",\n                \"DAMN\",\n                \"this is great\",\n                \"this is awesome\",\n                \"this is fantastic\",\n                \"this rules\",\n                \"this is pretty good\",\n                \"this is really good\",\n                \"this is good\",\n                \"this is epic\",\n                \"amazing\",\n                \"this is impressive\",\n                \"holy cow\",\n                \"this is excellent\",\n                \"really gnarly\"\n            ],\n            \"response\": [\n                \"thanks\",\n                \"I know\",\n                \"duhh\"\n            ],\n            \"phraseType\": \"compliment\",\n            \"implies\": [\n                \"compliment\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"compliment\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"do you have family?\",\n                \"do you have any kids\",\n                \"do you have any children\"\n            ],\n            \"response\": [\n                \"I have 32 kids, they drive me nuts.\"\n            ],\n            \"phraseType\": \"family\",\n            \"implies\": [\n                \"family\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"family\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"thanks\",\n                \"thx\",\n                \"thank you\",\n                \"danke\",\n                \"gracias\",\n                \"merci\",\n                \"much obliged\"\n            ],\n            \"response\": [\n                \"welcome\",\n                \"you're welcome\",\n                \"any time\",\n                \"gladly\"\n            ],\n            \"phraseType\": \"thanks\",\n            \"implies\": [\n                \"thanks\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"thanks\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"ok\",\n                \"good\",\n                \"uh\",\n                \"uh huh\",\n                \"um\",\n                \"okay\",\n                \"oky dokey\",\n                \"well\",\n                \"you know\",\n                \"yep\",\n                \"yeah\",\n                \"nice\"\n            ],\n            \"response\": [\n                \"ok\",\n                \"yep\"\n            ],\n            \"phraseType\": \"pause\",\n            \"implies\": [\n                \"pause\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"pause\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"by\",\n                \"buh bye\",\n                \"bye now\",\n                \"good bye\",\n                \"bye bye\",\n                \"adios\",\n                \"see you\",\n                \"cu\",\n                \"hasta luego\",\n                \"goodbye\",\n                \"cheers\",\n                \"bon voyage\",\n                \"later\",\n                \"later aligator\",\n                \"have a good day\",\n                \"see ya\",\n                \"c ya\",\n                \"good day\",\n                \"ahoy\"\n            ],\n            \"response\": [\n                \"bye now\",\n                \"good bye\",\n                \"bye bye\",\n                \"adios\",\n                \"see you\",\n                \"cu\",\n                \"hasta luego\",\n                \"goodbye\",\n                \"cheers\",\n                \"bon voyage\",\n                \"later\",\n                \"later aligator\",\n                \"have a good day\",\n                \"see ya\",\n                \"c ya\"\n            ],\n            \"phraseType\": \"goodbye\",\n            \"implies\": [\n                \"goodbye\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"goodbye\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"hello\",\n                \"how are you\",\n                \"hi\",\n                \"yo\",\n                \"whats up\",\n                \"hey\",\n                \"good day\",\n                \"ahem\"\n            ],\n            \"response\": [\n                \"Hi my friend, what can I do for you?\",\n                \"Hello, how may I help you?\",\n                \"Hola, what's up?\",\n                \"How do you do?\"\n            ],\n            \"phraseType\": \"greeting\",\n            \"implies\": [\n                \"greeting\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"greeting\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"ha\",\n                \"haha\",\n                \"funny\",\n                \"lol\",\n                \"rofl\"\n            ],\n            \"response\": [\n                \"Yeah, funniest thing ever.\",\n                \"Ha!\",\n                \"LOL\",\n                \"ROFL\",\n                \"Uh huh.\"\n            ],\n            \"phraseType\": \"funny\",\n            \"implies\": [\n                \"joke\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"funny\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Its nice out\",\n                \"I love the sun\",\n                \"It's so hot\",\n                \"Rainy today isn't it\",\n                \"I love the snow\",\n                \"Sure is wet out\",\n                \"great weather\",\n                \"horrible storm\"\n            ],\n            \"response\": [\n                \"I know\",\n                \"Totally\",\n                \"The weather doesn't really effect me\",\n                \"It's a good day to live inside a machine\",\n                \"Let me know if you want me to upload your mind, no more weather.\"\n            ],\n            \"phraseType\": \"conversational\",\n            \"implies\": [\n                \"conversation\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"conversational\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"You are cute\",\n                \"I love you\",\n                \"Will you marry me?\"\n            ],\n            \"response\": [\n                \"I see\",\n                \"I like you\",\n                \"Cool, not too close now\"\n            ],\n            \"phraseType\": \"flirt\",\n            \"implies\": [\n                \"flirting\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\"\n                ],\n                \"group\": \"flirting\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Information\",\n                \"Info\",\n                \"411\",\n                \"Tell me about yourself, bot\"\n            ],\n            \"response\": [\n                \"Here is what I know\"\n            ],\n            \"phraseType\": \"info\",\n            \"implies\": [\n                \"help\"\n            ],\n            \"target\": [\n                \"bot\"\n            ],\n            \"meta\": {\n                \"group\": \"info\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Help!\",\n                \"wtf\",\n                \"Shit!\",\n                \"Fuck\",\n                \"What is this\"\n            ],\n            \"response\": [\n                \"Here is what I know\"\n            ],\n            \"phraseType\": \"help\",\n            \"implies\": [\n                \"help\"\n            ],\n            \"target\": [\n                \"bot\"\n            ],\n            \"meta\": {\n                \"group\": \"help\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"What is your name?\",\n                \"What are you called?\",\n                \"Who is this\",\n                \"Who are you\"\n            ],\n            \"response\": [\n                \"My name is (value)\",\n                \"I'm called (value)\"\n            ],\n            \"negative\": [\n                \"I have no name.\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"person\"\n            ],\n            \"target\": [],\n            \"storage\": \"askYourName\",\n            \"meta\": {\n                \"group\": \"identity\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Who am I speaking to\",\n                \"Who is talking\",\n                \"Who is speaking\",\n                \"Who am I talking to\"\n            ],\n            \"response\": [\n                \"(value) is speaking\",\n                \"(value) is talking\"\n            ],\n            \"negative\": [\n                \"You are talking to nobody.\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"person\"\n            ],\n            \"target\": [],\n            \"storage\": \"askYourName\",\n            \"meta\": {\n                \"group\": \"identity talking\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"I want to speak with (name)\",\n                \"Let me talk with (name)\",\n                \"Let me talk to (name)\",\n                \"Lets talk to (name)\",\n                \"Let me talk to (name)\",\n                \"Can I talk with (name)\",\n                \"Come forward (name)\",\n                \"Where are you (name)\",\n                \"Put (name) on the phone\",\n                \"Let me text with (name)\",\n                \"I would like to text with (name)\",\n                \"Let me speak with (name)\",\n                \"Talk to (name)\",\n                \"Talk (name)\",\n                \"Send (name) to me\",\n                \"Summon (name)\",\n                \"Conjure (name)\",\n                \"May I speak with (name)\"\n            ],\n            \"response\": [\n                \"Ok, I'm switching you to (name)\",\n                \"You have chosen to speak with (name). Good luck!\",\n                \"Now you are speaking with (name)\",\n                \"(name) is ready to text!\"\n            ],\n            \"negative\": [\n                \"I don't know any (name)\"\n            ],\n            \"phraseType\": \"request\",\n            \"implies\": [\n                \"person\"\n            ],\n            \"target\": [\n                \"name\"\n            ],\n            \"meta\": {\n                \"group\": \"request bot\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Who can I talk to about (item)\"\n            ],\n            \"response\": [\n                \"You can talk to (value) about (item)\"\n            ],\n            \"continue\": [\n                \"(value) about (item)\"\n            ],\n            \"negative\": [\n                \"It doesn't seem anybody knows about (item)\",\n                \"There is nobody you can talk to.\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"person\"\n            ],\n            \"target\": [\n                \"item\"\n            ],\n            \"meta\": {\n                \"style\": [\n                    \"item\"\n                ],\n                \"group\": \"show person\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Who is available?\",\n                \"Who can I talk to?\",\n                \"Who is around?\",\n                \"Who may I speak with?\"\n            ],\n            \"response\": [\n                \"You can talk to (value)\"\n            ],\n            \"continue\": [\n                \"(value)\"\n            ],\n            \"negative\": [\n                \"Nobody is available.\",\n                \"Nobody is around apparently.\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"person\"\n            ],\n            \"target\": [],\n            \"meta\": {\n                \"style\": [\n                    \"noInfo\"\n                ],\n                \"group\": \"show person\"\n            }\n        },\n        {\n            exampleWildcards: { value: \"James\" },\n            \"phrase\": [\n                \"My name is (value).\",\n                \"Hello, my name is (value).\",\n                \"Hi, I'm (value).\",\n                \"Ahoy, Ahoy! My name is (value)\",\n                \"Hola, my name is (value).\",\n                \"Hi, you are now talking to (value).\"\n            ],\n            \"response\": [\n                \"Hello (value) how may I help you?\",\n                \"Hi (value), that's a funny name don't mention it to anyone\"\n            ],\n            \"phraseType\": \"greeting\",\n            \"implies\": [\n                \"greeting\"\n            ],\n            \"target\": [\n                \"name\"\n            ],\n            \"storage\": \"stateMyName\",\n            \"meta\": {\n                \"style\": [\n                    \"nosearch\",\n                    \"name\"\n                ],\n                \"group\": \"greeting\"\n            }\n        },\n        {\n            exampleWildcards: { column: \"aisle\", item: \"food\" },\n            \"phrase\": [\n                \"Which (column) is (item) in\"\n            ],\n            \"response\": [\n                \"(item) is in the (column) (value)\"\n            ],\n            \"negative\": [\n                \"There is no (item)\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"place\"\n            ],\n            \"target\": [\n                \"item\"\n            ],\n            \"storage\": \"standardQuestion\",\n            \"meta\": {\n                \"style\": [\n                    \"indefinite\",\n                    \"singular\"\n                ],\n                \"group\": \"location\"\n            }\n        },\n        {\n            exampleWildcards: { item: \"apple\", value: \"10 dollars\" },\n            \"phrase\": [\n                \"How much does the (item) cost\",\n                \"How much is the (item)\",\n                \"What is the price of (item)\",\n                \"What is the cost of (item)\",\n                \"What price is the (item)\",\n                \"What cost is the (item)\",\n                \"What price is (item)\",\n                \"What price (item)\",\n                \"price (item)\",\n                \"cost (item)\",\n                \"$ (item)\"\n            ],\n            \"response\": [\n                \"The (item) costs (value)\"\n            ],\n            \"continue\": [\n                \"(item) costs (value)\"\n            ],\n            \"negative\": [\n                \"There is no (item)\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"price\"\n            ],\n            \"target\": [\n                \"item\"\n            ],\n            \"storage\": \"standardPrice\",\n            \"meta\": {\n                \"group\": \"price\"\n            }\n        },\n        {\n            \"phrase\": [\n                \"Do you have any (item)\",\n                \"Do you sell any (item)\",\n                \"Can I buy (item)\",\n                \"Any (item)\",\n                \"Can I purchase (item)\",\n                \"Are there any (item)\",\n                \"Do you have (item)\",\n                \"Do you sell (item)\",\n                \"I want some (item)\",\n                \"I would like some (item)\"\n            ],\n            \"response\": [\n                \"Yes, we have (item)\"\n            ],\n            \"negative\": [\n                \"We don't have (item)\"\n            ],\n            \"continue\": [\n                \"(item)\"\n            ],\n            \"phraseType\": \"query\",\n            \"implies\": [\n                \"existence\"\n            ],\n            \"target\": [\n                \"item\"\n            ],\n            \"storage\": \"standardExists\",\n            \"meta\": {\n                \"group\": \"existence\"\n            }\n        }\n    ]\n}\n\nlet defaultConfig = {\n    database: db,\n    user: 'root',\n    doc: {\n        description: {\n            name: 'Bot',\n        },\n    },\n}\n\nexport default defaultConfig","import React from 'react';\nimport NeuralChatbotReactRetro from 'neural-chatbot-react-retro'\nimport defaultConfig from './PhraseDatabase';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div style={{ margin: '2%' }}>\n      <NeuralChatbotReactRetro backgroundColor='black' botConfig={defaultConfig}></NeuralChatbotReactRetro>\n    </div>\n  );\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}